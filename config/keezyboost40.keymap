// dt-formatter: multilineListCommaStyle="leading"

#include <behaviors.dtsi>
#include <behaviors/none.dtsi>
#include <behaviors/transparent.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    bindings = <&sl>, <&kp>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    bindings = <&sk>, <&kp>;
};

/ {
    behaviors {
        hm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sk>, <&kp>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            display-name = "Home Row Mod";
        };

        ls: layer_sticky_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&lt>, <&sk>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            display-name = "Layer Sticky Tap";
        };

        asc: autoshift_custom {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sh>, <&kp>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        swap_at: swap_app_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&swap_a>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            bindings = <&sk>, <&kp>;
        };

        // Unmodded: Shift | With Shift: Caps Word.
        ms: magicshift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            display-name = "Magic Shift";
        };

        // Tap: &kp | Hold: Shift Caps Word.
        ms_t: magic_shift_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&ms>, <&kp>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            display-name = "Magic Shift Tap";
        };

        atab: alt_tab {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <0 10 11 12 13 16 17 18 19 32 32 34 35 36 37>;
            display-name = "Alt-Tab";
        };

        ctab: ctrl_tab {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LCTL>, <&kp TAB>, <&kt LCTL>;
            ignored-key-positions = <0 10 11 12 13 16 17 18 19 32 32 34 35 36 37>;
            display-name = "Ctrl-Tab";
        };

        gtab: gui_tab {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
            ignored-key-positions = <0 10 11 12 13 16 17 18 19 32 32 34 35 36 37>;
            display-name = "Ctrl-Tab";
        };

        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp DOT>, <&kp EXCL>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        cmma_qmark: cmma_qmark {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COMMA>, <&kp QMARK>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fslh_tild: fslh_tild {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp FSLH>, <&kp TILDE>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        asde: autoshift_dot_excl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&dot_excl>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        ascq: autoshift_cmma_qmark {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&cmma_qmark>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        asft: autoshift_fslh_tild {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&fslh_tild>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            display-name = "Autoshift (Custom)";
        };

        alt_f1: alt_f1 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N1>, <&kp F1>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f2: alt_f2 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N2>, <&kp F2>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f3: alt_f3 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N3>, <&kp F3>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f4: alt_f4 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N4>, <&kp F4>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f5: alt_f5 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N5>, <&kp F5>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f6: alt_f6 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N6>, <&kp F6>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f7: alt_f7 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N7>, <&kp F7>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f8: alt_f8 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N8>, <&kp F8>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f9: alt_f9 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N9>, <&kp F9>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f10: alt_f10 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N0>, <&kp F10>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f11: alt_f11 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp MINUS>, <&kp F11>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f12: alt_f12 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp EQUAL>, <&kp F12>;
            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
            display-name = "Copy";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X)>;
            display-name = "Cut";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>;
            display-name = "Paste";
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>;
            display-name = "Undo";
        };

        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(Z))>;
            display-name = "Redo";
        };

        swapper: swapper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &swap_at 0 LA(TAB)>
                , <&macro_pause_for_release>
                , <&macro_release &swap_at 0 LA(TAB)>;
            display-name = "Alt-Tab";
        };

        launcher: launcher {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            display-name = "Launcher";
        };

        /**
         * Swap windows
         * Windows/Linux: Grave-Tab
         * MacOS: Ctrl-Tab (Cmd-Tab if CMD_SWAP)
         */
        swap_w: swap_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to 5>
                , <&macro_tap &gtab>
                ;
        };

        /**
         * Swap applications
         * Windows/Linux: Alt-Tab
         * MacOS: Cmd-Tab
         */
        swap_a: swap_app {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to 5>
                , <&macro_tap &ctab>
                ;
        };

        // Hold: Caps Lock; Tap: Caps Word
        cw: caps_lock_caps_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press>
                , <&hold_cw CAPS 0>
                , <&macro_pause_for_release>
                , <&macro_release>
                , <&hold_cw CAPS 0>
                ;
            display-name = "Caps Word-Hold";
        };

        hold_cw: hold_caps_word {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&cw_td>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            display-name = "Hold Caps Word";
        };

        cw_td: caps_word_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;
            tapping-term-ms = <175>;
            display-name = "Caps Word Tap Dance";
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press>
                , <&macro_param_1to1>
                , <&macro_param_1to2>
                , <&asc MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_release>
                , <&macro_param_1to1>
                , <&macro_param_1to2>
                , <&asc MACRO_PLACEHOLDER MACRO_PLACEHOLDER>
                ;
            display-name = "Autoshift";
        };

        sh: shifted_keypress {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LSHFT>
                ;
            display-name = "Shifted Keypress";
        };
    };

    combos {
        compatible = "zmk,combos";

        to_base {
            bindings = <&to 0>;
            key-positions = <0 1>;
        };

        to_game {
            bindings = <&to 1>;
            key-positions = <1 2>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <8 9>;
        };

        wm_combo {
            bindings = <&swapper>;
            key-positions = <2 3>;  // FP
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;  //  AR
        };

        lalt {
            bindings = <&sk LALT>;
            key-positions = <11 12>; // RS
        };

        lgui {
            bindings = <&sk LGUI>;
            key-positions = <11 12 13>; // RST
        };

        lctl {
            bindings = <&sk LCTL>;
            key-positions = <12 13>;  // ST
        };

        rctl {
            bindings = <&sk LCTL>;
            key-positions = <16 17>;  // NE
        };

        rgui {
            bindings = <&sk LGUI>;
            key-positions = <16 17 18>;  // NEI
        };

        ralt {
            bindings = <&sk LALT>;
            key-positions = <17 18>;  // IO
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
// ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
// ┃      Q      ┃      W      ┃      F      ┃      P      ┃      B      ┃      J      ┃      L      ┃      U      ┃      Y      ┃      '     ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃      A      ┃      R      ┃      S      ┃      T      ┃      G      ┃      M      ┃      N      ┃      E      ┃      I      ┃      O     ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃      Z      ┃      X      ┃      C      ┃      D      ┃      V      ┃      K      ┃      H      ┃      ,      ┃      .      ┃      /     ┃
// ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃             ┃             ┃     ESC     ┃    SPACE    ┃     TAB     ┃    ENTER    ┃    BSPC     ┃     DEL     ┃             ┃            ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━┛
            bindings = <
&kp Q  &kp W       &lt 3 F       &kp P            &kp B          &kp J          &kp L           &lt 3 U        &kp Y         &as SQT
&kp A  &hm LALT R  &lt 2 S       &hm LGUI T       &kp G          &kp M          &hm LGUI N      &lt 2 E        &hm LALT I    &kp O
&kp Z  &kp X       &kp C         &kp D            &kp V          &kp K          &kp H           &ascq QMARK 0  &asde EXCL 0  &asft TILDE 0
&none  &none       &mt LALT ESC  &mt LCTRL SPACE  &mt LSHFT TAB  &mt RSHFT RET  &mt LCTRL BSPC  &mt LALT DEL   &none         &none
            >;
        };

        game {
            display-name = "game";
// ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
// ┃      Q      ┃      W      ┃      F      ┃      P      ┃      B      ┃      J      ┃      L      ┃      U      ┃      Y      ┃      '     ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃      A      ┃      R      ┃      S      ┃      T      ┃      G      ┃      M      ┃      N      ┃      E      ┃      I      ┃      O     ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃      Z      ┃      X      ┃      C      ┃      D      ┃      V      ┃      K      ┃      H      ┃      ,      ┃      .      ┃      /     ┃
// ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃             ┃             ┃     ESC     ┃    SPACE    ┃     TAB     ┃    ENTER    ┃    BSPC     ┃     DEL     ┃             ┃            ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━┛
            bindings = <
&kp Q    &kp W  &kp F         &kp P           &kp B          &kp J          &kp L          &kp U          &kp Y         &kp APOS
&kp A    &kp R  &kp S         &kp T           &kp G          &kp M          &kp N          &kp E          &kp I         &kp O
&lt 3 Z  &kp X  &kp C         &kp D           &kp V          &kp K          &kp H          &ascq QMARK 0  &asde EXCL 0  &asft TILDE 0
&none    &none  &mt LCTL ESC  &mt LALT SPACE  &mt LSHFT TAB  &mt LSHFT RET  &mt LALT BSPC  &mt LCTL DEL   &none         &none
            >;
        };

        num {
            display-name = "number";
// ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
// ┃      [      ┃      7      ┃      8      ┃      9      ┃      ]      ┃      {      ┃      &      ┃      #      ┃      @      ┃      }     ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃      +      ┃      4      ┃      5      ┃      6      ┃      =      ┃      |      ┃      ^      ┃      _      ┃      $      ┃      :     ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃      *      ┃      1      ┃      2      ┃      3      ┃      <      ┃      >      ┃      %      ┃      (      ┃      )      ┃      ;     ┃
// ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃             ┃             ┃             ┃      0      ┃      -      ┃      _      ┃      \      ┃             ┃             ┃            ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━┛
            bindings = <
&kp LBKT  &kp N7  &kp N8    &kp N9        &kp RBKT         &kp LBRC         &kp AMPS        &kp HASH     &kp AT    &kp RBRC
&kp PLUS  &kp N4  &lt 2 N5  &hm LGUI N6   &kp EQUAL        &kp PIPE         &hm LGUI CARET  &lt 2 UNDER  &kp DLLR  &kp COLON
&kp STAR  &kp N1  &kp N2    &kp N3        &kp LT           &kp GT           &kp PRCNT       &kp LPAR     &kp RPAR  &kp SEMI
&trans    &trans  &sk LALT  &mt LCTRL N0  &mt LSHFT MINUS  &mt LSHFT UNDER  &mt LCTRL BSLH  &sk LALT     &trans    &trans
            >;
        };

        nav {
            display-name = "move";
// ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
// ┃     F12     ┃     F7      ┃     F8      ┃     F9      ┃     F15     ┃     HOME    ┃  PAGE DOWN  ┃   PAGE UP   ┃     END     ┃            ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃     F11     ┃     F4      ┃     F5      ┃     F6      ┃     F14     ┃     LEFT    ┃     DOWN    ┃     UP      ┃    RIGHT    ┃            ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃     F10     ┃     F1      ┃     F2      ┃     F3      ┃     F13     ┃   ^-PSCRN   ┃    PSCRN    ┃             ┃             ┃            ┃
// ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃             ┃             ┃     ESC     ┃    SPACE    ┃     TAB     ┃    ENTER    ┃     BSPC    ┃     DEL     ┃             ┃            ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━┛
            bindings = <
&kp F12  &kp F7  &lt 3 F8  &kp F9   &kp F15  &kp HOME       &kp PG_DN  &lt 3 PG_UP  &kp END    &none
&kp F11  &kp F4  &kp F5    &kp F6   &kp F14  &kp LEFT       &kp DOWN   &kp UP       &kp RIGHT  &none
&kp F10  &kp F1  &kp F2    &kp F3   &kp F13  &kp LC(PSCRN)  &kp PSCRN  &none        &none      &none
&trans   &trans  &trans    &trans   &trans   &trans         &trans     &trans       &trans     &trans
            >;
        };

        app {
            display-name = "apps";
// ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┓
// ┃             ┃             ┃             ┃             ┃             ┃             ┃             ┃             ┃             ┃            ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃             ┃    LEFT     ┃    DOWN     ┃     UP      ┃    RIGHT    ┃    LEFT     ┃    DOWN     ┃     UP      ┃    RIGHT    ┃            ┃
// ┣━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━┫━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃             ┃             ┃             ┃             ┃             ┃             ┃             ┃             ┃             ┃            ┃
// ╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━━╋━━━━━━━━━━━━┫
// ┃             ┃             ┃    base     ┃   swapper   ┃    ENTER    ┃    ENTER    ┃   swapper   ┃    base     ┃             ┃            ┃
// ┗━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━━┻━━━━━━━━━━━━┛
            bindings = <
&trans  &trans    &trans    &trans    &trans     &trans    &trans    &trans  &trans     &trans
&trans  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans    &trans    &trans    &trans     &trans    &trans    &trans  &trans     &trans
&trans  &trans    &to 0     &swapper  &kp RET    &kp RET   &swapper  &to 0   &trans     &trans
            >;
        };
    };
};
